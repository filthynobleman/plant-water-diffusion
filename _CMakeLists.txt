cmake_minimum_required(VERSION 3.9.0)
project(TreeWaterDiffusion VERSION 0.1.0)

# Languages are C and C++
enable_language(C)
enable_language(CXX)


# Windows needs extra care for making shared libraries
if(MSVC)
    set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS TRUE)
    set(BUILD_SHARED_LIBS TRUE)
endif()


# Include eigen
include_directories("${CMAKE_SOURCE_DIR}/ext/eigen")


# Include project headers
include_directories("${CMAKE_SOURCE_DIR}/include")


# Library files
set(HPP_FILES   "${CMAKE_SOURCE_DIR}/include/twd/includes.hpp"
                "${CMAKE_SOURCE_DIR}/include/twd/fwddecl.hpp"
                "${CMAKE_SOURCE_DIR}/include/twd/datatypes.hpp"
                "${CMAKE_SOURCE_DIR}/include/twd/utils.hpp"
                "${CMAKE_SOURCE_DIR}/include/twd/common.hpp"
                "${CMAKE_SOURCE_DIR}/include/twd/node.hpp"
                "${CMAKE_SOURCE_DIR}/include/twd/tree.hpp"
                "${CMAKE_SOURCE_DIR}/include/twd/wiltdata.hpp"
                "${CMAKE_SOURCE_DIR}/include/twd/wiltmodel.hpp"
                "${CMAKE_SOURCE_DIR}/include/twd/twd.hpp")
set(CPP_FILES   "${CMAKE_SOURCE_DIR}/src/node.cpp"
                "${CMAKE_SOURCE_DIR}/src/tree.cpp"
                "${CMAKE_SOURCE_DIR}/src/wiltdata.cpp"
                "${CMAKE_SOURCE_DIR}/src/wiltmodel.cpp")


# Create the library
add_library(twd SHARED  ${CPP_FILES})
target_compile_features(twd PRIVATE cxx_std_17)

# Add project properties
set_target_properties(twd PROPERTIES VERSION ${PROJECT_VERSION})
set_target_properties(twd PROPERTIES SOVERSION 0.1)
set_target_properties(twd PROPERTIES PUBLIC_HEADER "${HPP_FILES}")

# Install
install(TARGETS twd
        LIBRARY DESTINATION "${CMAKE_INSTALL_PREFIX}/twd/lib"
        ARCHIVE DESTINATION "${CMAKE_INSTALL_PREFIX}/twd/lib"
        RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}/twd/bin"
        PUBLIC_HEADER DESTINATION "${CMAKE_INSTALL_PREFIX}/twd/include/twd")



option(BUILD_TEST "Build sample applications for testing." ON)

if (BUILD_TEST)

    # Build, compile and link dependencies
    # GLAD
    set(GLAD_HOME "${CMAKE_SOURCE_DIR}/ext/glad" CACHE PATH "Home directory of GLAD.")
    include_directories("${GLAD_HOME}/include")
    add_library(GLAD STATIC "${GLAD_HOME}/src/glad.c")

    # GLFW
    set(GLFW_HOME "${CMAKE_SOURCE_DIR}/ext/glfw" CACHE PATH "Home directory of GLFW.")
    include_directories("${GLFW_HOME}/include")
    if (MSVC)
        set(glfw3 "${GLFW_HOME}/lib/glfw3.lib")
    else()
        set(glfw3 "${GLFW_HOME}/lib/glfw3.a")
    endif()
    find_package(OpenGL REQUIRED)

    # GLM
    set(GLM_HOME "${CMAKE_SOURCE_DIR}/ext/glm" CACHE PATH "Home directory of GLM.")
    include_directories("${GLM_HOME}/include")

    # Compile test applications
    add_executable(TestBuildTree "${CMAKE_SOURCE_DIR}/src/test/test_build_tree.cpp")
    target_compile_features(TestBuildTree PRIVATE cxx_std_17)
    target_link_libraries(TestBuildTree twd)

    add_executable(TestVisitTree "${CMAKE_SOURCE_DIR}/src/test/test_visit_tree.cpp")
    target_compile_features(TestVisitTree PRIVATE cxx_std_17)
    target_link_libraries(TestVisitTree twd)

    add_executable(TestWiltingModel "${CMAKE_SOURCE_DIR}/src/test/test_wilting_model.cpp")
    target_compile_features(TestWiltingModel PRIVATE cxx_std_17)
    target_link_libraries(TestWiltingModel twd GLAD ${glfw3} OpenGL::GL)
endif()